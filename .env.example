# Since the ".env" file is gitignored, you can use the ".env.example" file to
# build a new ".env" file when you clone the repo. Keep this file up-to-date
# when you add new variables to `.env`.

# This file will be committed to version control, so make sure not to have any
# secrets in it. If you are cloning this repo, create a copy of this file named
# ".env" and populate it with your secrets.

# When adding additional environment variables, the schema in "/src/env.js"
# should be updated accordingly.

# Configure Auth0 provider
# AUTH0_CLIENT_ID=""
# AUTH0_CLIENT_SECRET=""
AUTH0_ISSUER=""

# Credentials to assume role in `get_issuer_private_key.ts`
AWS_REGION=""
AWS_ACCESS_KEY_ID=""
AWS_SECRET_ACCESS_KEY=""
AWS_KMS_KEY_ID=""

# Prisma
# https://www.prisma.io/docs/reference/database-reference/connection-urls#env
DATABASE_URL="mongodb://mongodb:27017/badgingsoln?replicaSet=rs0&directConnection=true" # connection string of db to interact with
DEV_DATABASE_URL="" # dev-badging db connection string
PROD_DATABASE_URL="" # prod-badging db connection string

## Associated w/ issuer private key getting and storage of secret value
ISSUER_PRIVATE_KEY_SECRET_NAME="" # name of secret manager secret to be read by backend. Defined by Terraform.
ISSUER_PRIVATE_KEY_FROM_ORIGIN="" # keep this empty - the envvar is updated on backend start
ISSUER_PRIVATE_KEY_READ_ROLE_ARN="arn:aws:iam::<account_id>:role/<role_name_to_be_assumed>" # Emitted as output after Terraform run. 

# Enable Lightcast integration
# LIGHTCAST_CLIENT_ID=""
# LIGHTCAST_SECRET=""

# Next Auth
# You can generate a new secret on the command line with:
# openssl rand -base64 32
# https://next-auth.js.org/configuration/options#secret
# NEXTAUTH_SECRET=""
NEXTAUTH_URL="https://badging.lndo.site"

# Status Service
CRED_STATUS_SERVICE: github
CRED_STATUS_REPO_OWNER:
CRED_STATUS_REPO_NAME:
CRED_STATUS_META_REPO_NAME:
CRED_STATUS_ACCESS_TOKEN:
CRED_STATUS_DID_SEED: # did:key seed
# CRED_STATUS_DID_SEED:  # did:key test seed